#version 430 core
layout (std140, binding=0) uniform attratorBlock
{
	vec4 attractor[64];
};

layout (local_size_x = 1024) in;

layout (rgba32f, binding = 0) uniform imageBuffer positionBuffer;
layout (rgba32f, binding = 1) uniform imageBuffer velocityBuffer;

uniform float dt = 1.0f;

void main()
{
    // get position and velocity
	vec4 position = imageLoad(positionBuffer, int(gl_GlobalInvocationID.x));
	vec4 velocity = imageLoad(velocityBuffer, int(gl_GlobalInvocationID.x));

	// update position and velocity
	position.xyz += velocity.xyz * dt;
	position.w -= 0.0001f * dt;
	for(int i=0;i<10;i++)
	{
		vec3 dist = attractor[i].xyz - position.xyz;
		velocity.xyz += dt * dt * attractor[i].w * normalize(dist) / (dot(dist, dist) + 10.0);
	}
	if (position.w <= 0.0)
	{
		position.xyz = -position.xyz * 0.01;
		position.w += 1.0f;
		velocity.xyz *= 0.01;
	}

	// restore
	imageStore(positionBuffer, int(gl_GlobalInvocationID.x), position);
	imageStore(velocityBuffer, int(gl_GlobalInvocationID.x), velocity);
}

